Gramática

    0 $accept: vilan $end

    1 vilan: DECLARE dec BEGIN code END

    2 dec: initvar dec
    3    | %empty

    4 initvar: INT VAR
    5        | ARRAY NUM VAR

    6 code: assign code
    7     | for code
    8     | if code
    9     | PRINT STR code
   10     | %empty

   11 assign: VAR '=' assign
   12       | VAR '=' list
   13       | VAR '=' READ
   14       | numval

   15 numval: '(' numval '+' numval ')'
   16       | '(' numval '-' numval ')'
   17       | '(' numval '*' numval ')'
   18       | '(' numval '/' numval ')'
   19       | '(' numval ')'
   20       | NUM
   21       | VAR

   22 list: '[' listval ']'

   23 listval: numval ',' listval
   24        | numval
   25        | %empty

   26 for: initfor code ENDFOR

   27 initfor: FOR VAR IN VAR steps
   28        | FOR VAR TO numval steps

   29 steps: STEP numval
   30      | %empty

   31 if: IF cond THEN code ENDIF
   32   | IF cond THEN code ELSE code ENDIF

   33 cond: '(' cond OPB cond ')'
   34     | '(' cond ')'
   35     | NUM


Terminais, com as regras aonde aparecem

$end (0) 0
'(' (40) 15 16 17 18 19 33 34
')' (41) 15 16 17 18 19 33 34
'*' (42) 17
'+' (43) 15
',' (44) 23
'-' (45) 16
'/' (47) 18
'=' (61) 11 12 13
'[' (91) 22
']' (93) 22
error (256)
DECLARE (258) 1
BEGIN (259) 1
END (260) 1
INT (261) 4
ARRAY (262) 5
PRINT (263) 9
READ (264) 13
FOR (265) 27 28
IN (266) 27
TO (267) 28
STEP (268) 29
ENDFOR (269) 26
IF (270) 31 32
THEN (271) 31 32
ELSE (272) 32
ENDIF (273) 31 32
NUM (274) 5 20 35
STR (275) 9
VAR (276) 4 5 11 12 13 21 27 28
OPB (277) 33


Não-terminais, com as regras aonde aparecem

$accept (33)
    à esquerda: 0
vilan (34)
    à esquerda: 1, à direita: 0
dec (35)
    à esquerda: 2 3, à direita: 1 2
initvar (36)
    à esquerda: 4 5, à direita: 2
code (37)
    à esquerda: 6 7 8 9 10, à direita: 1 6 7 8 9 26 31 32
assign (38)
    à esquerda: 11 12 13 14, à direita: 6 11
numval (39)
    à esquerda: 15 16 17 18 19 20 21, à direita: 14 15 16 17 18 19
    23 24 28 29
list (40)
    à esquerda: 22, à direita: 12
listval (41)
    à esquerda: 23 24 25, à direita: 22 23
for (42)
    à esquerda: 26, à direita: 7
initfor (43)
    à esquerda: 27 28, à direita: 26
steps (44)
    à esquerda: 29 30, à direita: 27 28
if (45)
    à esquerda: 31 32, à direita: 8
cond (46)
    à esquerda: 33 34 35, à direita: 31 32 33 34


Estado0

    0 $accept: . vilan $end

    DECLARE  fazer shift, e ir para o estado 1

    vilan  ir para o estado 2


Estado1

    1 vilan: DECLARE . dec BEGIN code END

    INT    fazer shift, e ir para o estado 3
    ARRAY  fazer shift, e ir para o estado 4

    $default  reduzir usando a regra 3 (dec)

    dec      ir para o estado 5
    initvar  ir para o estado 6


Estado2

    0 $accept: vilan . $end

    $end  fazer shift, e ir para o estado 7


Estado3

    4 initvar: INT . VAR

    VAR  fazer shift, e ir para o estado 8


Estado4

    5 initvar: ARRAY . NUM VAR

    NUM  fazer shift, e ir para o estado 9


Estado5

    1 vilan: DECLARE dec . BEGIN code END

    BEGIN  fazer shift, e ir para o estado 10


Estado6

    2 dec: initvar . dec

    INT    fazer shift, e ir para o estado 3
    ARRAY  fazer shift, e ir para o estado 4

    $default  reduzir usando a regra 3 (dec)

    dec      ir para o estado 11
    initvar  ir para o estado 6


Estado7

    0 $accept: vilan $end .

    $default  aceite


Estado8

    4 initvar: INT VAR .

    $default  reduzir usando a regra 4 (initvar)


Estado9

    5 initvar: ARRAY NUM . VAR

    VAR  fazer shift, e ir para o estado 12


Estado10

    1 vilan: DECLARE dec BEGIN . code END

    PRINT  fazer shift, e ir para o estado 13
    FOR    fazer shift, e ir para o estado 14
    IF     fazer shift, e ir para o estado 15
    NUM    fazer shift, e ir para o estado 16
    VAR    fazer shift, e ir para o estado 17
    '('    fazer shift, e ir para o estado 18

    $default  reduzir usando a regra 10 (code)

    code     ir para o estado 19
    assign   ir para o estado 20
    numval   ir para o estado 21
    for      ir para o estado 22
    initfor  ir para o estado 23
    if       ir para o estado 24


Estado11

    2 dec: initvar dec .

    $default  reduzir usando a regra 2 (dec)


Estado12

    5 initvar: ARRAY NUM VAR .

    $default  reduzir usando a regra 5 (initvar)


Estado13

    9 code: PRINT . STR code

    STR  fazer shift, e ir para o estado 25


Estado14

   27 initfor: FOR . VAR IN VAR steps
   28        | FOR . VAR TO numval steps

    VAR  fazer shift, e ir para o estado 26


Estado15

   31 if: IF . cond THEN code ENDIF
   32   | IF . cond THEN code ELSE code ENDIF

    NUM  fazer shift, e ir para o estado 27
    '('  fazer shift, e ir para o estado 28

    cond  ir para o estado 29


Estado16

   20 numval: NUM .

    $default  reduzir usando a regra 20 (numval)


Estado17

   11 assign: VAR . '=' assign
   12       | VAR . '=' list
   13       | VAR . '=' READ
   21 numval: VAR .

    '='  fazer shift, e ir para o estado 30

    $default  reduzir usando a regra 21 (numval)


Estado18

   15 numval: '(' . numval '+' numval ')'
   16       | '(' . numval '-' numval ')'
   17       | '(' . numval '*' numval ')'
   18       | '(' . numval '/' numval ')'
   19       | '(' . numval ')'

    NUM  fazer shift, e ir para o estado 16
    VAR  fazer shift, e ir para o estado 31
    '('  fazer shift, e ir para o estado 18

    numval  ir para o estado 32


Estado19

    1 vilan: DECLARE dec BEGIN code . END

    END  fazer shift, e ir para o estado 33


Estado20

    6 code: assign . code

    PRINT  fazer shift, e ir para o estado 13
    FOR    fazer shift, e ir para o estado 14
    IF     fazer shift, e ir para o estado 15
    NUM    fazer shift, e ir para o estado 16
    VAR    fazer shift, e ir para o estado 17
    '('    fazer shift, e ir para o estado 18

    $default  reduzir usando a regra 10 (code)

    code     ir para o estado 34
    assign   ir para o estado 20
    numval   ir para o estado 21
    for      ir para o estado 22
    initfor  ir para o estado 23
    if       ir para o estado 24


Estado21

   14 assign: numval .

    $default  reduzir usando a regra 14 (assign)


Estado22

    7 code: for . code

    PRINT  fazer shift, e ir para o estado 13
    FOR    fazer shift, e ir para o estado 14
    IF     fazer shift, e ir para o estado 15
    NUM    fazer shift, e ir para o estado 16
    VAR    fazer shift, e ir para o estado 17
    '('    fazer shift, e ir para o estado 18

    $default  reduzir usando a regra 10 (code)

    code     ir para o estado 35
    assign   ir para o estado 20
    numval   ir para o estado 21
    for      ir para o estado 22
    initfor  ir para o estado 23
    if       ir para o estado 24


Estado23

   26 for: initfor . code ENDFOR

    PRINT  fazer shift, e ir para o estado 13
    FOR    fazer shift, e ir para o estado 14
    IF     fazer shift, e ir para o estado 15
    NUM    fazer shift, e ir para o estado 16
    VAR    fazer shift, e ir para o estado 17
    '('    fazer shift, e ir para o estado 18

    $default  reduzir usando a regra 10 (code)

    code     ir para o estado 36
    assign   ir para o estado 20
    numval   ir para o estado 21
    for      ir para o estado 22
    initfor  ir para o estado 23
    if       ir para o estado 24


Estado24

    8 code: if . code

    PRINT  fazer shift, e ir para o estado 13
    FOR    fazer shift, e ir para o estado 14
    IF     fazer shift, e ir para o estado 15
    NUM    fazer shift, e ir para o estado 16
    VAR    fazer shift, e ir para o estado 17
    '('    fazer shift, e ir para o estado 18

    $default  reduzir usando a regra 10 (code)

    code     ir para o estado 37
    assign   ir para o estado 20
    numval   ir para o estado 21
    for      ir para o estado 22
    initfor  ir para o estado 23
    if       ir para o estado 24


Estado25

    9 code: PRINT STR . code

    PRINT  fazer shift, e ir para o estado 13
    FOR    fazer shift, e ir para o estado 14
    IF     fazer shift, e ir para o estado 15
    NUM    fazer shift, e ir para o estado 16
    VAR    fazer shift, e ir para o estado 17
    '('    fazer shift, e ir para o estado 18

    $default  reduzir usando a regra 10 (code)

    code     ir para o estado 38
    assign   ir para o estado 20
    numval   ir para o estado 21
    for      ir para o estado 22
    initfor  ir para o estado 23
    if       ir para o estado 24


Estado26

   27 initfor: FOR VAR . IN VAR steps
   28        | FOR VAR . TO numval steps

    IN  fazer shift, e ir para o estado 39
    TO  fazer shift, e ir para o estado 40


Estado27

   35 cond: NUM .

    $default  reduzir usando a regra 35 (cond)


Estado28

   33 cond: '(' . cond OPB cond ')'
   34     | '(' . cond ')'

    NUM  fazer shift, e ir para o estado 27
    '('  fazer shift, e ir para o estado 28

    cond  ir para o estado 41


Estado29

   31 if: IF cond . THEN code ENDIF
   32   | IF cond . THEN code ELSE code ENDIF

    THEN  fazer shift, e ir para o estado 42


Estado30

   11 assign: VAR '=' . assign
   12       | VAR '=' . list
   13       | VAR '=' . READ

    READ  fazer shift, e ir para o estado 43
    NUM   fazer shift, e ir para o estado 16
    VAR   fazer shift, e ir para o estado 17
    '('   fazer shift, e ir para o estado 18
    '['   fazer shift, e ir para o estado 44

    assign  ir para o estado 45
    numval  ir para o estado 21
    list    ir para o estado 46


Estado31

   21 numval: VAR .

    $default  reduzir usando a regra 21 (numval)


Estado32

   15 numval: '(' numval . '+' numval ')'
   16       | '(' numval . '-' numval ')'
   17       | '(' numval . '*' numval ')'
   18       | '(' numval . '/' numval ')'
   19       | '(' numval . ')'

    '+'  fazer shift, e ir para o estado 47
    ')'  fazer shift, e ir para o estado 48
    '-'  fazer shift, e ir para o estado 49
    '*'  fazer shift, e ir para o estado 50
    '/'  fazer shift, e ir para o estado 51


Estado33

    1 vilan: DECLARE dec BEGIN code END .

    $default  reduzir usando a regra 1 (vilan)


Estado34

    6 code: assign code .

    $default  reduzir usando a regra 6 (code)


Estado35

    7 code: for code .

    $default  reduzir usando a regra 7 (code)


Estado36

   26 for: initfor code . ENDFOR

    ENDFOR  fazer shift, e ir para o estado 52


Estado37

    8 code: if code .

    $default  reduzir usando a regra 8 (code)


Estado38

    9 code: PRINT STR code .

    $default  reduzir usando a regra 9 (code)


Estado39

   27 initfor: FOR VAR IN . VAR steps

    VAR  fazer shift, e ir para o estado 53


Estado40

   28 initfor: FOR VAR TO . numval steps

    NUM  fazer shift, e ir para o estado 16
    VAR  fazer shift, e ir para o estado 31
    '('  fazer shift, e ir para o estado 18

    numval  ir para o estado 54


Estado41

   33 cond: '(' cond . OPB cond ')'
   34     | '(' cond . ')'

    OPB  fazer shift, e ir para o estado 55
    ')'  fazer shift, e ir para o estado 56


Estado42

   31 if: IF cond THEN . code ENDIF
   32   | IF cond THEN . code ELSE code ENDIF

    PRINT  fazer shift, e ir para o estado 13
    FOR    fazer shift, e ir para o estado 14
    IF     fazer shift, e ir para o estado 15
    NUM    fazer shift, e ir para o estado 16
    VAR    fazer shift, e ir para o estado 17
    '('    fazer shift, e ir para o estado 18

    $default  reduzir usando a regra 10 (code)

    code     ir para o estado 57
    assign   ir para o estado 20
    numval   ir para o estado 21
    for      ir para o estado 22
    initfor  ir para o estado 23
    if       ir para o estado 24


Estado43

   13 assign: VAR '=' READ .

    $default  reduzir usando a regra 13 (assign)


Estado44

   22 list: '[' . listval ']'

    NUM  fazer shift, e ir para o estado 16
    VAR  fazer shift, e ir para o estado 31
    '('  fazer shift, e ir para o estado 18

    $default  reduzir usando a regra 25 (listval)

    numval   ir para o estado 58
    listval  ir para o estado 59


Estado45

   11 assign: VAR '=' assign .

    $default  reduzir usando a regra 11 (assign)


Estado46

   12 assign: VAR '=' list .

    $default  reduzir usando a regra 12 (assign)


Estado47

   15 numval: '(' numval '+' . numval ')'

    NUM  fazer shift, e ir para o estado 16
    VAR  fazer shift, e ir para o estado 31
    '('  fazer shift, e ir para o estado 18

    numval  ir para o estado 60


Estado48

   19 numval: '(' numval ')' .

    $default  reduzir usando a regra 19 (numval)


Estado49

   16 numval: '(' numval '-' . numval ')'

    NUM  fazer shift, e ir para o estado 16
    VAR  fazer shift, e ir para o estado 31
    '('  fazer shift, e ir para o estado 18

    numval  ir para o estado 61


Estado50

   17 numval: '(' numval '*' . numval ')'

    NUM  fazer shift, e ir para o estado 16
    VAR  fazer shift, e ir para o estado 31
    '('  fazer shift, e ir para o estado 18

    numval  ir para o estado 62


Estado51

   18 numval: '(' numval '/' . numval ')'

    NUM  fazer shift, e ir para o estado 16
    VAR  fazer shift, e ir para o estado 31
    '('  fazer shift, e ir para o estado 18

    numval  ir para o estado 63


Estado52

   26 for: initfor code ENDFOR .

    $default  reduzir usando a regra 26 (for)


Estado53

   27 initfor: FOR VAR IN VAR . steps

    STEP  fazer shift, e ir para o estado 64

    $default  reduzir usando a regra 30 (steps)

    steps  ir para o estado 65


Estado54

   28 initfor: FOR VAR TO numval . steps

    STEP  fazer shift, e ir para o estado 64

    $default  reduzir usando a regra 30 (steps)

    steps  ir para o estado 66


Estado55

   33 cond: '(' cond OPB . cond ')'

    NUM  fazer shift, e ir para o estado 27
    '('  fazer shift, e ir para o estado 28

    cond  ir para o estado 67


Estado56

   34 cond: '(' cond ')' .

    $default  reduzir usando a regra 34 (cond)


Estado57

   31 if: IF cond THEN code . ENDIF
   32   | IF cond THEN code . ELSE code ENDIF

    ELSE   fazer shift, e ir para o estado 68
    ENDIF  fazer shift, e ir para o estado 69


Estado58

   23 listval: numval . ',' listval
   24        | numval .

    ','  fazer shift, e ir para o estado 70

    $default  reduzir usando a regra 24 (listval)


Estado59

   22 list: '[' listval . ']'

    ']'  fazer shift, e ir para o estado 71


Estado60

   15 numval: '(' numval '+' numval . ')'

    ')'  fazer shift, e ir para o estado 72


Estado61

   16 numval: '(' numval '-' numval . ')'

    ')'  fazer shift, e ir para o estado 73


Estado62

   17 numval: '(' numval '*' numval . ')'

    ')'  fazer shift, e ir para o estado 74


Estado63

   18 numval: '(' numval '/' numval . ')'

    ')'  fazer shift, e ir para o estado 75


Estado64

   29 steps: STEP . numval

    NUM  fazer shift, e ir para o estado 16
    VAR  fazer shift, e ir para o estado 31
    '('  fazer shift, e ir para o estado 18

    numval  ir para o estado 76


Estado65

   27 initfor: FOR VAR IN VAR steps .

    $default  reduzir usando a regra 27 (initfor)


Estado66

   28 initfor: FOR VAR TO numval steps .

    $default  reduzir usando a regra 28 (initfor)


Estado67

   33 cond: '(' cond OPB cond . ')'

    ')'  fazer shift, e ir para o estado 77


Estado68

   32 if: IF cond THEN code ELSE . code ENDIF

    PRINT  fazer shift, e ir para o estado 13
    FOR    fazer shift, e ir para o estado 14
    IF     fazer shift, e ir para o estado 15
    NUM    fazer shift, e ir para o estado 16
    VAR    fazer shift, e ir para o estado 17
    '('    fazer shift, e ir para o estado 18

    $default  reduzir usando a regra 10 (code)

    code     ir para o estado 78
    assign   ir para o estado 20
    numval   ir para o estado 21
    for      ir para o estado 22
    initfor  ir para o estado 23
    if       ir para o estado 24


Estado69

   31 if: IF cond THEN code ENDIF .

    $default  reduzir usando a regra 31 (if)


Estado70

   23 listval: numval ',' . listval

    NUM  fazer shift, e ir para o estado 16
    VAR  fazer shift, e ir para o estado 31
    '('  fazer shift, e ir para o estado 18

    $default  reduzir usando a regra 25 (listval)

    numval   ir para o estado 58
    listval  ir para o estado 79


Estado71

   22 list: '[' listval ']' .

    $default  reduzir usando a regra 22 (list)


Estado72

   15 numval: '(' numval '+' numval ')' .

    $default  reduzir usando a regra 15 (numval)


Estado73

   16 numval: '(' numval '-' numval ')' .

    $default  reduzir usando a regra 16 (numval)


Estado74

   17 numval: '(' numval '*' numval ')' .

    $default  reduzir usando a regra 17 (numval)


Estado75

   18 numval: '(' numval '/' numval ')' .

    $default  reduzir usando a regra 18 (numval)


Estado76

   29 steps: STEP numval .

    $default  reduzir usando a regra 29 (steps)


Estado77

   33 cond: '(' cond OPB cond ')' .

    $default  reduzir usando a regra 33 (cond)


Estado78

   32 if: IF cond THEN code ELSE code . ENDIF

    ENDIF  fazer shift, e ir para o estado 80


Estado79

   23 listval: numval ',' listval .

    $default  reduzir usando a regra 23 (listval)


Estado80

   32 if: IF cond THEN code ELSE code ENDIF .

    $default  reduzir usando a regra 32 (if)
